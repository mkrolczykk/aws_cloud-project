{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudformation template for Amazon Big Data capstone project",
    "Parameters" : {
        "LambdaServiceRole": {
            "Type": "String",
            "Default": "arn:aws:iam::571632058847:role/lambda-role-mkrolczyk"
        },
        "FirehoseDeliveryStreamRole": {
            "Type": "String",
            "Default": "arn:aws:iam::571632058847:role/firehose-delivery-stream-mkrolczyk"
        },
        "KinesisAnalyticsRole": {
            "Type": "String",
            "Default": "arn:aws:iam::571632058847:role/kinesis-analytics-mkrolczyk"
        },
        "emrRole": {
             "Type" : "String",
             "Default": "EMR_DefaultRole"
        },
        "emrEc2Role": {
             "Type" : "String",
             "Default": "EMR_EC2_DefaultRole"
        },
        "glueRole": {
             "Type": "String",
             "Description": "Glue execution role",
             "Default": "arn:aws:iam::571632058847:role/YOUR_ROLE"
        },
        "SourceItemViewsStreamName": {
            "Type": "String",
            "Default": "SourceItemViewsStream-mkrolczyk"
        },
        "SourceReviewStreamName": {
            "Type": "String",
            "Default": "SourceReviewStream-mkrolczyk"
        },
        "S3DataBucketName": {
            "Type": "String",
            "Default": "mkrolczyk-data-capstone",
            "Description": "Name of S3 bucket to create for storing data"
        },
        "S3ResourcesBucketName": {
            "Type": "String",
            "Default": "mkrolczyk-project-resources",
            "Description": "Name of already existing S3 bucket with project resources"
        },
        "LambdaServiceTriggerEmrJobName": {
            "Type": "String",
            "Default": "LambdaServiceTriggerEmrJob-mkrolczyk"
        },
        "EC2InstanceType" : {
            "Type" : "String",
            "Default": "t2.micro"
        },
        "EC2AMIArn" : {
            "Type" : "String",
            "Default": "ami-0bd6de9a4728d1a95"
        },
        "EC2KeyName" : {
            "Type" : "String",
            "Default": "aws_mkrolczyk_EC2_key"
        },
        "emrSubnetId" : {
            "Type" : "String",
            "Default": "subnet-0bab0c46"
        },
        "emrClusterName" : {
            "Type" : "String",
            "Default": "emr-cluster-mkrolczyk"
        },
        "emrInstanceType" : {
            "Type" : "String",
            "Default": "m5.xlarge"
        },
        "emrMasterInstanceCount" : {
            "Type" : "Number",
            "Default": "1"
        },
        "emrReleaseLabel" : {
            "Type" : "String",
            "Default": "emr-5.31.0"
        },
        "emrTerminationProtected" : {
            "Type" : "String",
            "Default" : "false"
        },
        "LambdaServiceFilterIpFunctionName": {
            "Type": "String",
            "Default": "LambdaServiceFilterIpFunction-mkrolczyk"
        },
        "FirehouseItemsDeliveryStreamName": {
            "Type": "String",
            "Default": "FirehouseItemsDeliveryStream-mkrolczyk"
        },
        "FirehouseReviewsDeliveryStreamName": {
            "Type": "String",
            "Default": "FirehouseReviewsDeliveryStream-mkrolczyk"
        },
        "DynamoDBSuspiciousIpsTableName": {
            "Type": "String",
            "Default": "DynamoDBSuspiciousIpsTable-mkrolczyk"
        },
        "DynamoDBTop10ItemsResultTableName": {
            "Type": "String",
            "Default": "DynamoDBTop10ItemsResultTable-mkrolczyk"
        },
        "DynamoDBTop10CategoriesResultTableName": {
            "Type": "String",
            "Default": "DynamoDBTop10CategoriesResultTable-mkrolczyk"
        },
        "KinesisViewsAnalyticsName": {
            "Type": "String",
            "Default": "KinesisViewsAnalytics-mkrolczyk"
        },
        "LambdaServiceForKinesisViewsAnalyticsOutputName": {
            "Type": "String",
            "Default": "LambdaServiceForKinesisViewsAnalyticsOutput-mkrolczyk"
        },
        "GlueDatabaseName": {
            "Type": "String",
            "Default": "GlueDatabase-mkrolczyk"
        },
        "S3FilteredViewsCrawlerName": {
            "Type": "String",
            "Default": "S3FilteredViewsCrawler-mkrolczyk"
        },
        "S3FilteredReviewsCrawlerName": {
            "Type": "String",
            "Default": "S3FilteredReviewsCrawler-mkrolczyk"
        }
    },
    "Resources": {
        "SourceItemViewsStream": {
            "Type": "AWS::Kinesis::Stream",
            "RetentionPeriodHours": 24,
            "ShardCount": 1,
            "Properties": { "Name" : { "Ref" : "SourceItemViewsStreamName" } }
        },
        "SourceReviewStream": {
            "Type": "AWS::Kinesis::Stream",
            "RetentionPeriodHours": 24,
            "ShardCount": 1,
            "Properties": { "Name" : { "Ref" : "SourceReviewStreamName" } }
        },
        "DataBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": "S3ForLambdaTriggerEmrPermission",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": { "Ref" : "S3DataBucketName" },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key" : { "Rules": [{ "Name": "prefix", "Value": "views_filtered_data/" }] }
                            },
                            "Function": { "Fn::GetAtt": ["LambdaServiceTriggerEmrJob", "Arn"] }
                        }
                    ]
                }
            } 
        },
        "S3ForLambdaTriggerEmrPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "LambdaServiceTriggerEmrJob",
            "Properties": {
               "FunctionName": { "Fn::GetAtt": ["LambdaServiceTriggerEmrJob", "Arn"] },
               "Action": "lambda:InvokeFunction",
               "Principal": "s3.amazonaws.com",
               "SourceArn": { "Fn::Sub": "arn:aws:s3:::${S3BucketName}" }
            }
        },
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "KeyName": { "Ref" : "EC2KeyName" },
                "InstanceType": { "Ref" : "EC2InstanceType" },
                "ImageId": { "Ref" : "EC2AMIArn" }
            }
        },
        "LambdaServiceTriggerEmrJob": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": { "Ref" : "LambdaServiceTriggerEmrJobName" },
                "Role": { "Ref" : "LambdaServiceRole" },
                "Environment": {
                    "Variables": {
                        "S3ResourcesBucketName": { "Ref" : "S3ResourcesBucketName" },
                        "S3DataBucketName": { "Ref" : "S3DataBucketName" },
                        "DynamoDBSuspiciousIdsTable": { "Ref" : "DynamoDBSuspiciousIdsTable" },
                        "emrClusterName": { "Ref" : "emrClusterName" },
                        "EC2KeyName": { "Ref" : "EC2KeyName" },
                        "emrMasterInstanceCount": { "Ref": "emrMasterInstanceCount" },
                        "emrInstanceType": { "Ref" : "emrInstanceType" },
                        "emrTerminationProtected": { "Ref" : "emrTerminationProtected" },
                        "emrSubnetId": { "Ref" : "emrSubnetId" },
                        "emrEc2Role": { "Ref": "emrEc2Role" },
                        "emrRole": { "Ref": "emrRole" },
                        "emrReleaseLabel": { "Ref" : "emrReleaseLabel" },
                        "logUri": { "Fn::Join" : ["", ["s3://", { "Ref" : "S3DataBucketName" }, "/emr/logs"]] }
                    }
                },
                "Code": {
                  "S3Bucket": { "Ref" : "S3ResourcesBucketName" },
                  "S3Key": "lambda_service_trigger_emr_job.zip"
                },
                "Handler": "lambda_service_trigger_emr_job.handler",
                "Runtime": "python3.9",
                "Timeout": 30
            }
        },
        "DynamoDBSuspiciousIdsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": { "Ref": "DynamoDBSuspiciousIpsTableName" },
                "KeySchema": [
                    {
                      "KeyType": "HASH",
                      "AttributeName": "ip"
                    }
                ],
                "AttributeDefinitions": [
                    {
                      "AttributeName": "ip",
                      "AttributeType": "S"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "TimeToLive",
                    "Enabled": true
                },
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "2",
                    "WriteCapacityUnits": "2"
                }
            }
        },
        "DynamoDBTop10ItemsResultTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": { "Ref": "DynamoDBTop10ItemsResultTableName" },
                "KeySchema": [
                    {
                        "AttributeName": "item_id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "item_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "total_views",
                        "AttributeType": "S"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "TimeToLive",
                    "Enabled": true
                },
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "2",
                    "WriteCapacityUnits": "2"
                }
            }
        },
        "DynamoDBTop10CategoriesResultTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": { "Ref": "DynamoDBTop10CategoriesResultTableName" },
                "KeySchema": [
                    {
                        "AttributeName": "category",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "category",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "total_views",
                        "AttributeType": "S"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "TimeToLive",
                    "Enabled": true
                },
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "2",
                    "WriteCapacityUnits": "2"
                }
            }
        },
        "LambdaServiceFilterIpsFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": { "Ref" : "LambdaServiceFilterIpFunctionName" },
                "Role": {"Ref" : "LambdaServiceRole"},
                "Environment": {
                    "Variables": {
                        "DynamoDB_table": { "Ref" : "DynamoDBSuspiciousIpsTableName" },
                        "FirehouseItemsDeliveryStreamName": { "Ref" : "FirehouseItemsDeliveryStreamName" },
                        "FirehouseReviewsDeliveryStreamName": { "Ref" : "FirehouseReviewsDeliveryStreamName" }
                    }
                },
                "Code": {
                  "S3Bucket": { "Ref" : "S3ResourcesBucketName" },
                  "S3Key": "lambda_service_filter.zip"
                },
                "Handler": "lambda_service_filter.handler",
                "Runtime": "python3.9",
                "Timeout": 30
            }
        },
        "ItemsEventTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "StartingPosition": "LATEST",
            "FunctionName": { "Fn::GetAtt": ["LambdaServiceFilterIpsFunction", "Arn"] },
            "Properties": {
                "EventSourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:kinesis:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":stream/",
                            {
                                "Ref": "SourceItemViewsStreamName"
                            }
                        ]
                    ]
                }
            }
        },
        "ReviewsEventTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "StartingPosition": "LATEST",
            "FunctionName": { "Fn::GetAtt": ["LambdaServiceFilterIpsFunction", "Arn"] },
            "Properties": {
                "EventSourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:kinesis:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":stream/",
                            {
                                "Ref": "SourceReviewStreamName"
                            }
                        ]
                    ]
                }
            }
        },
        "FirehouseItemsDeliveryStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": { "Ref" : "FirehouseItemsDeliveryStreamName" },
                "S3DestinationConfiguration": {
                    "BucketARN": { "Fn::GetAtt" : ["DataBucket", "Arn"] },
                    "RoleARN": { "Ref" : "FirehoseDeliveryStreamRole" },
                    "BufferingHints": { "IntervalInSeconds": 60}
                },
                "Prefix": "views_filtered_data/"
            }
        },
        "FirehouseReviewsDeliveryStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": { "Ref" : "FirehouseReviewsDeliveryStreamName" },
                "S3DestinationConfiguration": {
                    "BucketARN": { "Fn::GetAtt" : ["DataBucket", "Arn"] },
                    "RoleARN": { "Ref" : "FirehoseDeliveryStreamRole" },
                    "BufferingHints": { "IntervalInSeconds": 60}
                },
                "Prefix": "reviews_filtered_data/"
            }
        },
        "KinesisViewsAnalytics": {
            "Type": "AWS::KinesisAnalytics::Application",
            "Properties": {
                "ApplicationName": { "Ref" : "KinesisViewsAnalyticsName" },
                "ApplicationDescription": "Identify the most popular items and categories by views",
                "Inputs": [
                    {
                        "InputSchema": {
                            "RecordColumns": [
                                {
                                    "Name": "device_id",
                                    "SqlType": "VARCHAR(50)"
                                },
                                {
                                    "Name": "device_type",
                                    "SqlType": "VARCHAR(50)"
                                },
                                {
                                    "Name": "item_id",
                                    "SqlType": "VARCHAR(10)"
                                },
                                {
                                    "Name": "ts",
                                    "SqlType": "TIMESTAMP"
                                },
                                {
                                    "Name": "user_ip",
                                    "SqlType": "VARCHAR(50)"
                                }
                            ],
                            "RecordFormat": {
                                "MappingParameters": {
                                    "CSVMappingParameters": {
                                        "RecordColumnDelimiter": ",",
                                        "RecordRowDelimiter": "\n"
                                    }
                                },
                                "RecordFormatType": "CSV"
                            }
                        },
                        "KinesisFirehoseInput": {
                            "ResourceARN": { "Fn::GetAtt" : ["FirehouseItemsDeliveryStream", "Arn"] },
                            "RoleARN": { "Ref" : "KinesisAnalyticsRole" }
                        },
                        "NamePrefix": "firehouse_views_delivery_stream"
                    }
                ],
                "ApplicationCode": "CREATE OR REPLACE STREAM \"most_popular_items_output_stream\"( item_id VARCHAR(10), total_views DOUBLE); CREATE OR REPLACE PUMP \"ITEMS_STREAM_PUMP\" AS INSERT INTO \"most_popular_items_output_stream\" SELECT STREAM * FROM TABLE ( TOP_K_ITEMS_TUMBLING( CURSOR( SELECT STREAM * FROM \"firehouse_views_delivery_stream_001\" ), 'item_id', 10, 60 ) ); CREATE OR REPLACE STREAM \"most_popular_categories_output_stream\" ( category VARCHAR(50), total_views DOUBLE ); CREATE OR REPLACE PUMP \"CATEGORIES_STREAM_PUMP\" AS INSERT INTO \"most_popular_categories_output_stream\" SELECT STREAM * FROM TABLE ( TOP_K_ITEMS_TUMBLING( CURSOR( SELECT STREAM * FROM \"firehouse_views_delivery_stream_001\" AS f JOIN \"items_information\" AS i IN f.\"item_id\" = i.\"item_id\"; ), 'category', 10, 60 ) );"
            }
        },
        "KinesisAnalyticsApplicationReferenceDataSource": {
            "Type": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
            "Properties": {
                "ApplicationName": { "Ref" : "KinesisViewsAnalytics" },
                "ReferenceDataSource": {
                    "ReferenceSchema" : {
                        "RecordColumns" : [
                            {
                                "Name": "item_id",
                                "SqlType": "VARCHAR(10)"
                            },
                            {
                                "Name": "title",
                                "SqlType": "VARCHAR(50)"
                            },
                            {
                                "Name": "description",
                                "SqlType": "VARCHAR(100)"
                            },
                            {
                                "Name": "category",
                                "SqlType": "VARCHAR(50)"
                            }
                        ],
                        "RecordFormat": {
                            "RecordFormatType": "CSV",
                            "MappingParameters": {
                                "CSVMappingParameters": {
                                    "RecordColumnDelimiter": ",",
                                    "RecordRowDelimiter": "\n"
                                }
                            }
                        }
                    },
                    "S3ReferenceDataSource" : {
                        "BucketARN": { "Fn::GetAtt" : ["S3ResourcesBucketName", "Arn"] },
                        "FileKey": "items.csv",
                        "ReferenceRoleARN": { "Ref" : "KinesisAnalyticsRole" }
                    },
                    "TableName" : "items_information"
                }
            }
        },
        "KinesisViewsAnalyticsItemsOutput": {
            "Type": "AWS::KinesisAnalytics::ApplicationOutput",
            "DependsOn": "KinesisViewsAnalytics",
            "Properties": {
                "ApplicationName": { "Ref" : "KinesisViewsAnalyticsName" },
                "Output": {
                    "DestinationSchema": { "RecordFormatType": "JSON" },
                    "LambdaOutput": {
                        "ResourceARN": { "Fn::GetAtt" : ["LambdaServiceForKinesisViewsAnalyticsOutput", "Arn"] },
                        "RoleARN": { "Ref" : "KinesisAnalyticsRole" }
                    },
                    "Name": "most_popular_items_output_stream"
                }
            }
        },
        "KinesisViewsAnalyticsCategoriesOutput": {
            "Type": "AWS::KinesisAnalytics::ApplicationOutput",
            "DependsOn": "KinesisViewsAnalytics",
            "Properties": {
                "ApplicationName": { "Ref" : "KinesisViewsAnalyticsName" },
                "Output": {
                    "DestinationSchema": { "RecordFormatType": "JSON" },
                    "LambdaOutput": {
                        "ResourceARN": { "Fn::GetAtt" : ["LambdaServiceForKinesisViewsAnalyticsOutput", "Arn"] },
                        "RoleARN": { "Ref" : "KinesisAnalyticsRole" }
                    },
                    "Name": "most_popular_categories_output_stream"
                }
            }
        },
        "LambdaServiceForKinesisViewsAnalyticsOutput": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": { "Ref" : "LambdaServiceForKinesisViewsAnalyticsOutputName" },
                "Role": {"Ref" : "LambdaServiceRole"},
                "Environment": {
                    "SNSTopic": { "Ref" : "SNSHighTrafficTopic" },
                    "DynamoDBTop10ItemsResultTableName": { "Ref": "DynamoDBTop10ItemsResultTableName" },
                    "DynamoDBTop10CategoriesResultTableName": { "Ref": "DynamoDBTop10CategoriesResultTableName" }

                },
                "Code": {
                    "S3Bucket": { "Ref" : "S3ResourcesBucketName" },
                    "S3Key": "lambda_for_kinesis_analytics_output.zip"
                },
                "Handler": "lambda_for_kinesis_analytics_output.handler",
                "Runtime": "python3.9",
                "Timeout": 30
            }
        },
        "SNSHighTrafficTopic": {
            "Type": "AWS::SNS::Topic",
            "TopicName": "High traffic topic",
            "DisplayName": "High traffic topic",
            "Properties": {
                "Subscription" : [
                    {
                        "Endpoint" : "mkrolczyk@griddynamics.com",
                        "Protocol" : "email"
                    }
                ]
            }
        },
        "GlueDatabase": {
            "Type": "AWS::Glue::Database",
            "Properties": {
                "CatalogId": {
                    "Ref": "AWS::AccountId"
                },
                "DatabaseInput": {
                    "Name": { "Ref" : "GlueDatabaseName" }
                }
            }
        },
        "S3FilteredViewsCrawler": {
            "Type": "AWS::Glue::Crawler",
            "Properties": {
                "Name": { "Ref" : "S3FilteredViewsCrawlerName" },
                "Role": {"Ref": "glueRole"},
                "DatabaseName": { "Ref" : "GlueDatabase" },
                "SchemaChangePolicy": {
                    "UpdateBehavior": "LOG",
                    "DeleteBehavior": "LOG"
                },
                "Targets": {
                    "S3Targets": [
                        {
                            "Path": { "Fn::Join": ["", ["s3://", { "Ref" : "S3DataBucketName" }, "/views_filtered_data"]] }
                        }
                    ],
                    "DynamoDBTargets": [
                        {
                            "Path": { "Ref" : "DynamoDBSuspiciousIpsTableName" }
                        }
                    ]
                }
            }
        },
        "AthenaDistributionOfViewsQuery": {
            "Type": "AWS::Athena::NamedQuery",
            "Properties": {
                "Database": { "Ref" : "GlueDatabaseName" },
                "Description": "Calculate distribution of views by device types",
                "Name": "DistributionOfViewsByDeviceTypesQuery",
                "QueryString": "SELECT device_type, COUNT(*) AS views FROM views_filtered_data GROUP BY device_type ORDER BY views DESC"
            }
        }
    }
}