{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudformation template for Amazon Big Data capstone project",
    "Parameters" : {
        "LambdaServiceRole": {
            "Type": "String",
            "Default": "arn:aws:iam::571632058847:role/lambda-role-mkrolczyk"
        },
        "FirehoseDeliveryStreamRole": {
            "Type": "String",
            "Default": "arn:aws:iam::571632058847:role/firehose-delivery-stream-mkrolczyk"
        },
        "SourceItemStreamName": {
            "Type": "String",
            "Default": "SourceItemStream-mkrolczyk"
        },
        "SourceReviewStreamName": {
            "Type": "String",
            "Default": "SourceReviewStream-mkrolczyk"
        },
        "S3DataBucketName": {
            "Type": "String",
            "Default": "mkrolczyk-data-capstone",
            "Description": "Name of S3 bucket to create for storing data"
        },
        "S3ResourcesBucketName": {
            "Type": "String",
            "Default": "mkrolczyk-project-resources",
            "Description": "Name of already existing S3 bucket with project resources"
        },
        "LambdaServiceTriggerEmrJobName": {
            "Type": "String",
            "Default": "LambdaServiceTriggerEmrJob-mkrolczyk"
        },
        "EC2InstanceType" : {
            "Type" : "String",
            "Default": "t2.micro"
        },
        "EC2AMIArn" : {
            "Type" : "String",
            "Default": "ami-0bd6de9a4728d1a95"
        },
        "EC2KeyName" : {
            "Type" : "String",
            "Default": "aws_mkrolczyk_EC2_key"
        },
        "emrSubnetId" : {
            "Type" : "String",
            "Default": "subnet-0bab0c46"
        },
        "emrClusterName" : {
            "Type" : "String",
            "Default": "emr-cluster-mkrolczyk"
        },
        "emrInstanceType" : {
            "Type" : "String",
            "Default": "m5.xlarge"
        },
        "emrMasterInstanceCount" : {
            "Type" : "Number",
            "Default": "1"
        },
        "emrReleaseLabel" : {
            "Type" : "String",
            "Default": "emr-5.31.0"
        },
        "emrTerminationProtected" : {
            "Type" : "String",
            "Default" : "false"
        },
        "emrRole": {
             "Type" : "String",
             "Default": "EMR_DefaultRole"
        },
        "emrEc2Role": {
             "Type" : "String",
             "Default": "EMR_EC2_DefaultRole"
        },
        "LambdaServiceFilterIpFunctionName": {
            "Type": "String",
            "Default": "LambdaServiceFilterIpFunction-mkrolczyk"
        },
        "FirehouseItemsDeliveryStreamName": {
            "Type": "String",
            "Default": "FirehouseItemsDeliveryStreamName-mkrolczyk"
        },
        "FirehouseReviewsDeliveryStreamName": {
            "Type": "String",
            "Default": "FirehouseReviewsDeliveryStreamName-mkrolczyk"
        },
        "DynamoDBSuspiciousIpsTableName": {
            "Type": "String",
            "Default": "DynamoDBSuspiciousIpsTable-mkrolczyk"
        }
    },
    "Resources": {
        "SourceItemStream": {
            "Type": "AWS::Kinesis::Stream",
            "RetentionPeriodHours": 24,
            "ShardCount": 1,
            "Properties": { "Name" : { "Ref" : "SourceItemStreamName" } }
        },
        "SourceReviewStream": {
            "Type": "AWS::Kinesis::Stream",
            "RetentionPeriodHours": 24,
            "ShardCount": 1,
            "Properties": { "Name" : { "Ref" : "SourceReviewStreamName" } }
        },
        "DataBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": "S3ForLambdaTriggerEmrPermission",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": { "Ref" : "S3DataBucketName" },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key" : { "Rules": [{ "Name": "prefix", "Value": "items_filtered_data/" }] }
                            },
                            "Function": { "Fn::GetAtt": ["LambdaServiceTriggerEmrJob", "Arn"] }
                        }
                    ]
                }
            } 
        },
        "S3ForLambdaTriggerEmrPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "LambdaServiceTriggerEmrJob",
            "Properties": {
               "FunctionName": { "Fn::GetAtt": ["LambdaServiceTriggerEmrJob", "Arn"] },
               "Action": "lambda:InvokeFunction",
               "Principal": "s3.amazonaws.com",
               "SourceArn": { "Fn::Sub": "arn:aws:s3:::${S3BucketName}" }
            }
        },
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "KeyName": { "Ref" : "EC2KeyName" },
                "InstanceType": { "Ref" : "EC2InstanceType" },
                "ImageId": { "Ref" : "EC2AMIArn" }
            }
        },
        "LambdaServiceTriggerEmrJob": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": { "Ref" : "LambdaServiceTriggerEmrJobName" },
                "Role": { "Ref" : "LambdaServiceRole" },
                "Environment": {
                    "Variables": {
                        "S3ResourcesBucketName": { "Ref" : "S3ResourcesBucketName" },
                        "S3DataBucketName": { "Ref" : "S3DataBucketName" },
                        "DynamoDBSuspiciousIdsTable": { "Ref" : "DynamoDBSuspiciousIdsTable" },
                        "emrClusterName": { "Ref" : "emrClusterName" },
                        "EC2KeyName": { "Ref" : "EC2KeyName" },
                        "emrMasterInstanceCount": { "Ref": "emrMasterInstanceCount" },
                        "emrInstanceType": { "Ref" : "emrInstanceType" },
                        "emrTerminationProtected": { "Ref" : "emrTerminationProtected" },
                        "emrSubnetId": { "Ref" : "emrSubnetId" },
                        "emrEc2Role": { "Ref": "emrEc2Role" },
                        "emrRole": { "Ref": "emrRole" },
                        "emrReleaseLabel": { "Ref" : "emrReleaseLabel" },
                        "logUri": { "Fn::Join" : ["", ["s3://", { "Ref" : "S3DataBucketName" }, "/emr/logs"]] }
                    }
                },
                "Code": {
                  "S3Bucket": { "Ref" : "S3ResourcesBucketName" },
                  "S3Key": "lambda_service_trigger_emr_job.zip"
                },
                "Handler": "lambda_service_trigger_emr_job.handler",
                "Runtime": "python3.9",
                "Timeout": 30
            }
        },
        "DynamoDBSuspiciousIdsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": { "Ref": "DynamoDBSuspiciousIpsTableName" },
                "KeySchema": [
                    {
                      "KeyType": "HASH",
                      "AttributeName": "ip"
                    }
                ],
                "AttributeDefinitions": [
                    {
                      "AttributeName": "ip",
                      "AttributeType": "S"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "TimeToLive",
                    "Enabled": true
                },
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "2",
                    "WriteCapacityUnits": "2"
                }
            }
        },
        "LambdaServiceFilterIpsFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": { "Ref" : "LambdaServiceFilterIpFunctionName" },
                "Role": {"Ref" : "LambdaServiceRole"},
                "Environment": {
                    "Variables": {
                        "DynamoDB_table": { "Ref" : "DynamoDBSuspiciousIpsTableName" },
                        "FirehouseItemsDeliveryStreamName": { "Ref" : "FirehouseItemsDeliveryStreamName" },
                        "FirehouseReviewsDeliveryStreamName": { "Ref" : "FirehouseReviewsDeliveryStreamName" }
                    }
                },
                "Code": {
                  "S3Bucket": { "Ref" : "S3ResourcesBucketName" },
                  "S3Key": "lambda_service_filter.zip"
                },
                "Handler": "lambda_service_filter.handler",
                "Runtime": "python3.9",
                "Timeout": 30
            }
        },
        "ItemsEventTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "StartingPosition": "LATEST",
            "FunctionName": { "Fn::GetAtt": ["LambdaServiceFilterIpsFunction", "Arn"] },
            "Properties": {
                "EventSourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:kinesis:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":stream/",
                            {
                                "Ref": "SourceItemStreamName"
                            }
                        ]
                    ]
                }
            }
        },
        "ReviewsEventTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "StartingPosition": "LATEST",
            "FunctionName": { "Fn::GetAtt": ["LambdaServiceFilterIpsFunction", "Arn"] },
            "Properties": {
                "EventSourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:kinesis:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":stream/",
                            {
                                "Ref": "SourceReviewStreamName"
                            }
                        ]
                    ]
                }
            }
        },
        "FirehouseItemsDeliveryStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": { "Ref" : "FirehouseItemsDeliveryStreamName" },
                "S3DestinationConfiguration": {
                    "BucketARN": { "Fn::GetAtt" : ["DataBucket", "Arn"] },
                    "RoleARN": { "Ref" : "FirehoseDeliveryStreamRole" }
                },
                "Prefix": "items_filtered_data/"
            }
        },
        "FirehouseReviewsDeliveryStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": { "Ref" : "FirehouseReviewsDeliveryStreamName" },
                "S3DestinationConfiguration": {
                    "BucketARN": { "Fn::GetAtt" : ["DataBucket", "Arn"] },
                    "RoleARN": { "Ref" : "FirehoseDeliveryStreamRole" }
                },
                "Prefix": "reviews_filtered_data/"
            }
        }
    }
}